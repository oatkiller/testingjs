h1. Description

Testing.js is a very simple testing framework that has no external dependencies. It is very lightweight. It can run in browser or non-browser JavaScript environments. Use it to test your JavaScript code.

h1. Structure

Testing.js has several classes:

# *Runner*: Logs test failures and successes with its registered listeners
# *Suite*: Organizes related tests, runs setUp and tearDown functions before and after each test run, and reports to a Runner.
# *Test*: Consists of a message and a test. Calls Asserts in order to test your code.
# *Assert*: Throws failure errors when code doesn't work as expected. These errors are caught and passed to the Runner, which logs them.

h1. Usage Example

pre.. // Testing.js is stored at a fully qualified location in the dom
// Run this function like this to pollute the global namespace with Testing.js functions.
// See Details for instructions on using the library namespaced
this['git://github.com/oatkiller/testingjs.git']();

// A Runner is required.
// Runners create a default listener that reports to console.log, to override this, pass false when creating your Runner
var runner = new Runner();

// A Suite contains multiple tests
// A Suite config must specify a runner to report to
// A Suite config may specify any number of tests. The assertion should be in the property name, and the test is the function, like this:
var suite = new Suite({
	runner : runner,
	setUp : function () {
		// optional setUp functions are run in the scope of the Suite, before each test is run. Tests are run in this same scope, so they can access properties of the Suite
	},
	tearDown : function () {
		// optional tearDown function is run after each test
	},
	'1+1 should not equal 3' : function () {
		// use the Assert function, pass it true when a test has passed, or false otherwise. The second param is a message to send when a failure happens
		Assert(1+1!==3,'they did equal 3');
	},
	// this should fail
	'1+1 should equal 3' : function () {
		// 'they didnt equal 3' will be reported as the reason this test has failed
		Assert(1+1===3,'they didnt equal 3');
	}
});

//  call run() on a suite to run all of its tests
suite.run();
